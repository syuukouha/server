#!/bin/ELua
--[[
FileName : execute
Author   : rick <rick.han@yahoo.com>

copyright (c) <2015> <rick>

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
]]--

Config = {}
Config.logRoot = '/log' -- 日志的根目录

function usage()
    print [[
    execute option

    execute client  #启动客户端(测试代码)
    execute gatesvr #启动网关(测试)
    ]]
    os.exit()
end

if Sys.Argc < 3 then
    usage()
end

if os.getenv("SCRIPT_ROOT") then
    lfs.chdir(os.getenv("SCRIPT_ROOT")) 
end

-- 搜索路径设置
local currDir = lfs.currentdir()
local path = currDir .. "/?.lua;"
package.path = path .. package.path

Config.scriptRoot = currDir

function loadDir(dir)
    package.path = dir .. "/?.lua;" .. package.path
    for file in lfs.dir(dir) do
        local pos = string.find(file, "lua")
        if pos ~= nil then
            local name = string.sub(file, 0, pos-2)
            require(name)
        end
    end
end

-- 加载通用代码
loadDir(currDir .. '/common')

Config.appRoot = currDir .. '/' .. Sys.Argv[2]
logFileName = Config.logRoot .. '/' .. Sys.Argv[2]
Log.InitGoogleLogging(logFileName)
loadDir(Config.appRoot)
Log.Info('starup')

